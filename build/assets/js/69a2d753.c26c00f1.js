"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[5862],{80864:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>v,contentTitle:()=>m,default:()=>b,frontMatter:()=>p,metadata:()=>u,toc:()=>f});var n=o(87462),i=(o(67294),o(3905)),a=o(26389),s=o(94891),c=o(74933),l=o(47507),d=(o(24310),o(63303)),r=(o(75035),o(85162));const p={id:"election-votes-count",title:"Count of election emitted votes",description:"Count of election emitted votes",sidebar_label:"Count of election emitted votes",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"electionVotesCount",tags:["election"],parameters:[{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}}],responses:{200:{description:"Count of votes",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},description:"Count of election emitted votes",method:"get",path:"/election/{electionId}/votes/count",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Count of election emitted votes",description:{type:"text/plain"},url:{path:["election",":electionId","votes","count"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Election Id on 0x format",type:"text/plain"},type:"any",value:"",key:"electionId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},m=void 0,u={unversionedId:"vocdoni/election-votes-count",id:"vocdoni/election-votes-count",title:"Count of election emitted votes",description:"Count of election emitted votes",source:"@site/docs/vocdoni/election-votes-count.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/election-votes-count",permalink:"/vocdoni/election-votes-count",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/election-votes-count.api.mdx",tags:[],version:"current",frontMatter:{id:"election-votes-count",title:"Count of election emitted votes",description:"Count of election emitted votes",sidebar_label:"Count of election emitted votes",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"electionVotesCount",tags:["election"],parameters:[{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}}],responses:{200:{description:"Count of votes",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},description:"Count of election emitted votes",method:"get",path:"/election/{electionId}/votes/count",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Count of election emitted votes",description:{type:"text/plain"},url:{path:["election",":electionId","votes","count"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Election Id on 0x format",type:"text/plain"},type:"any",value:"",key:"electionId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"Election paginated list of nullifiers (envelopes)",permalink:"/vocdoni/election-votes"},next:{title:"Create an election",permalink:"/vocdoni/create-election"}},v={},f=[{value:"Count of election emitted votes",id:"count-of-election-emitted-votes",level:2}],h={toc:f};function b(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"count-of-election-emitted-votes"},"Count of election emitted votes"),(0,i.kt)("p",null,"Count of election emitted votes"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(c.Z,{className:"paramsItem",param:{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(a.Z,{mdxType:"ApiTabs"},(0,i.kt)(r.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Count of votes")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(r.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(d.Z,{mdxType:"SchemaTabs"},(0,i.kt)(r.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "todo": "object"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);