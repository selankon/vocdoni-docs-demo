"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[4053],{35045:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>b,frontMatter:()=>r,metadata:()=>f,toc:()=>v});var o=i(87462),n=(i(67294),i(3905)),l=i(26389),a=i(94891),s=i(74933),c=i(47507),d=(i(24310),i(63303)),p=(i(75035),i(85162));const r={id:"election-votes",title:"Election paginated list of nullifiers (envelopes)",description:"Election paginated list of nullifiers (envelopes)",sidebar_label:"Election paginated list of nullifiers (envelopes)",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"electionVotes",tags:["election"],parameters:[{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}}],responses:{200:{description:"Return list of nullifiers",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},description:"Election paginated list of nullifiers (envelopes)",method:"get",path:"/election/{electionId}/votes",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Election paginated list of nullifiers (envelopes)",description:{type:"text/plain"},url:{path:["election",":electionId","votes"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Election Id on 0x format",type:"text/plain"},type:"any",value:"",key:"electionId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},u=void 0,f={unversionedId:"vocdoni/election-votes",id:"vocdoni/election-votes",title:"Election paginated list of nullifiers (envelopes)",description:"Election paginated list of nullifiers (envelopes)",source:"@site/docs/vocdoni/election-votes.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/election-votes",permalink:"/vocdoni-docs-demo/build/vocdoni/election-votes",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/election-votes.api.mdx",tags:[],version:"current",frontMatter:{id:"election-votes",title:"Election paginated list of nullifiers (envelopes)",description:"Election paginated list of nullifiers (envelopes)",sidebar_label:"Election paginated list of nullifiers (envelopes)",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"electionVotes",tags:["election"],parameters:[{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}}],responses:{200:{description:"Return list of nullifiers",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},description:"Election paginated list of nullifiers (envelopes)",method:"get",path:"/election/{electionId}/votes",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Election paginated list of nullifiers (envelopes)",description:{type:"text/plain"},url:{path:["election",":electionId","votes"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Election Id on 0x format",type:"text/plain"},type:"any",value:"",key:"electionId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"Keys for specific election",permalink:"/vocdoni-docs-demo/build/vocdoni/election-get-keys"},next:{title:"Count of election emitted votes",permalink:"/vocdoni-docs-demo/build/vocdoni/election-votes-count"}},m={},v=[{value:"Election paginated list of nullifiers (envelopes)",id:"election-paginated-list-of-nullifiers-envelopes",level:2}],h={toc:v};function b(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,o.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"election-paginated-list-of-nullifiers-envelopes"},"Election paginated list of nullifiers (envelopes)"),(0,n.kt)("p",null,"Election paginated list of nullifiers (envelopes)"),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(s.Z,{className:"paramsItem",param:{name:"electionId",in:"path",description:"Election Id on 0x format",required:!0,schema:{type:"string",example:"0xcfc47afa95bc60bc32ef4ff214df79ea8f53881640094d0ce63817bf6e867845"}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)(l.Z,{mdxType:"ApiTabs"},(0,n.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Return list of nullifiers")),(0,n.kt)("div",null,(0,n.kt)(a.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(d.Z,{mdxType:"SchemaTabs"},(0,n.kt)(p.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,n.kt)(c.Z,{responseExample:'{\n  "todo": "object"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);