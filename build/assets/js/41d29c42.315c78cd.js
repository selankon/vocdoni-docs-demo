"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[6012],{66830:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>b,frontMatter:()=>c,metadata:()=>u,toc:()=>v});var i=a(87462),n=(a(67294),a(3905)),s=a(26389),o=a(94891),r=a(74933),l=a(47507),d=(a(24310),a(63303)),p=(a(75035),a(85162));const c={id:"add-wallet",title:"Adds a new wallet to the storage using privateKey",description:"- PrivateKey is a 32 bytes hexadecimal string - Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot recover the privatekey).",sidebar_label:"Adds a new wallet to the storage using privateKey",hide_title:!0,hide_table_of_contents:!0,api:{description:"- PrivateKey is a 32 bytes hexadecimal string\n- Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot\nrecover the privatekey).",operationId:"addWallet",tags:["wallet"],parameters:[{name:"privateKey",in:"path",description:"32 bytes hexadecimal string",required:!0,schema:{type:"string",example:"E9873D79C6D87DC0FB6A5778633389F4453213303DA61F20BD67FC233AA33262"}}],responses:{200:{description:"Return account data",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"post",path:"/wallet/add/{privateKey}",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Adds a new wallet to the storage using privateKey",description:{content:"- PrivateKey is a 32 bytes hexadecimal string\n- Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot\nrecover the privatekey).",type:"text/plain"},url:{path:["wallet","add",":privateKey"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) 32 bytes hexadecimal string",type:"text/plain"},type:"any",value:"",key:"privateKey"}]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"vocdoni/vocdoni-api"},h=void 0,u={unversionedId:"vocdoni/add-wallet",id:"vocdoni/add-wallet",title:"Adds a new wallet to the storage using privateKey",description:"- PrivateKey is a 32 bytes hexadecimal string - Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot recover the privatekey).",source:"@site/docs/vocdoni/add-wallet.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/add-wallet",permalink:"/vocdoni/add-wallet",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/add-wallet.api.mdx",tags:[],version:"current",frontMatter:{id:"add-wallet",title:"Adds a new wallet to the storage using privateKey",description:"- PrivateKey is a 32 bytes hexadecimal string - Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot recover the privatekey).",sidebar_label:"Adds a new wallet to the storage using privateKey",hide_title:!0,hide_table_of_contents:!0,api:{description:"- PrivateKey is a 32 bytes hexadecimal string\n- Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot\nrecover the privatekey).",operationId:"addWallet",tags:["wallet"],parameters:[{name:"privateKey",in:"path",description:"32 bytes hexadecimal string",required:!0,schema:{type:"string",example:"E9873D79C6D87DC0FB6A5778633389F4453213303DA61F20BD67FC233AA33262"}}],responses:{200:{description:"Return account data",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"post",path:"/wallet/add/{privateKey}",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Adds a new wallet to the storage using privateKey",description:{content:"- PrivateKey is a 32 bytes hexadecimal string\n- Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot\nrecover the privatekey).",type:"text/plain"},url:{path:["wallet","add",":privateKey"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) 32 bytes hexadecimal string",type:"text/plain"},type:"any",value:"",key:"privateKey"}]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"wallet",permalink:"/vocdoni/wallet"},next:{title:"Creates the account in the blockchain",permalink:"/vocdoni/wallet-bootstrap"}},m={},v=[{value:"Adds a new wallet to the storage using privateKey",id:"adds-a-new-wallet-to-the-storage-using-privatekey",level:2}],y={toc:v};function b(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"adds-a-new-wallet-to-the-storage-using-privatekey"},"Adds a new wallet to the storage using privateKey"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"PrivateKey is a 32 bytes hexadecimal string"),(0,n.kt)("li",{parentName:"ul"},"Returns a Bearer Token that must be used on further wallet calls (if the token is lost, the API backend cannot\nrecover the privatekey).")),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(r.Z,{className:"paramsItem",param:{name:"privateKey",in:"path",description:"32 bytes hexadecimal string",required:!0,schema:{type:"string",example:"E9873D79C6D87DC0FB6A5778633389F4453213303DA61F20BD67FC233AA33262"}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)(s.Z,{mdxType:"ApiTabs"},(0,n.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Return account data")),(0,n.kt)("div",null,(0,n.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(d.Z,{mdxType:"SchemaTabs"},(0,n.kt)(p.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,n.kt)(l.Z,{responseExample:'{\n  "todo": "object"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);