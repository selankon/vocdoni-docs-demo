"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[3987],{26701:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>g,default:()=>b,frontMatter:()=>c,metadata:()=>m,toc:()=>h});var a=i(87462),n=(i(67294),i(3905)),o=i(26389),s=i(94891),r=i(74933),l=i(47507),d=(i(24310),i(63303)),p=(i(75035),i(85162));const c={id:"organization-list",title:"Get list of registered organizations",description:"If no page is defined, will assume page 0",sidebar_label:"Get list of registered organizations",hide_title:!0,hide_table_of_contents:!0,api:{description:"If no page is defined, will assume page 0",operationId:"organizationList",tags:["chain"],parameters:[{name:"page",in:"path",description:"When returning a list it define de page number. If empty, default is 0",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:0}}],responses:{200:{description:"It return a list of organizations id",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"get",path:"/chain/organization/{page}",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Get list of registered organizations",description:{content:"If no page is defined, will assume page 0",type:"text/plain"},url:{path:["chain","organization",":page"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) When returning a list it define de page number. If empty, default is 0",type:"text/plain"},type:"any",value:"",key:"page"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},g=void 0,m={unversionedId:"vocdoni/organization-list",id:"vocdoni/organization-list",title:"Get list of registered organizations",description:"If no page is defined, will assume page 0",source:"@site/docs/vocdoni/organization-list.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/organization-list",permalink:"/vocdoni-docs-demo/build/vocdoni/organization-list",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/organization-list.api.mdx",tags:[],version:"current",frontMatter:{id:"organization-list",title:"Get list of registered organizations",description:"If no page is defined, will assume page 0",sidebar_label:"Get list of registered organizations",hide_title:!0,hide_table_of_contents:!0,api:{description:"If no page is defined, will assume page 0",operationId:"organizationList",tags:["chain"],parameters:[{name:"page",in:"path",description:"When returning a list it define de page number. If empty, default is 0",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:0}}],responses:{200:{description:"It return a list of organizations id",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"get",path:"/chain/organization/{page}",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Get list of registered organizations",description:{content:"If no page is defined, will assume page 0",type:"text/plain"},url:{path:["chain","organization",":page"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) When returning a list it define de page number. If empty, default is 0",type:"text/plain"},type:"any",value:"",key:"page"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"Get registered organizations count",permalink:"/vocdoni-docs-demo/build/vocdoni/organization-count"},next:{title:"Get full block information by height",permalink:"/vocdoni-docs-demo/build/vocdoni/block-by-height"}},u={},h=[{value:"Get list of registered organizations",id:"get-list-of-registered-organizations",level:2}],f={toc:h};function b(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"get-list-of-registered-organizations"},"Get list of registered organizations"),(0,n.kt)("p",null,"If no page is defined, will assume page 0"),(0,n.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{}},(0,n.kt)("strong",null,"Path Parameters")),(0,n.kt)("div",null,(0,n.kt)("ul",null,(0,n.kt)(r.Z,{className:"paramsItem",param:{name:"page",in:"path",description:"When returning a list it define de page number. If empty, default is 0",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:0}},mdxType:"ParamsItem"})))),(0,n.kt)("div",null,(0,n.kt)(o.Z,{mdxType:"ApiTabs"},(0,n.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"It return a list of organizations id")),(0,n.kt)("div",null,(0,n.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,n.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,n.kt)(d.Z,{mdxType:"SchemaTabs"},(0,n.kt)(p.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,n.kt)(l.Z,{responseExample:'{\n  "todo": "object"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);