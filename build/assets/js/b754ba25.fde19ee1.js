"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[7419],{25096:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>w,frontMatter:()=>p,metadata:()=>m,toc:()=>y});var s=a(87462),i=(a(67294),a(3905)),n=a(26389),r=a(94891),o=a(74933),d=a(47507),c=(a(24310),a(63303)),l=(a(75035),a(85162));const p={id:"census-add-key",title:"Create new census",description:"- Requires Bearer token  - Adds a new wallet public key or wallet address to a census with a specific weight - If the weight parameter is missing, weight=1 is considered",sidebar_label:"Create new census",hide_title:!0,hide_table_of_contents:!0,api:{description:"- Requires Bearer token \n- Adds a new wallet public key or wallet address to a census with a specific weight\n- If the weight parameter is missing, weight=1 is considered",operationId:"censusAddKey",security:[{bearerAuth:[]}],tags:["census"],parameters:[{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}},{name:"publicKey",in:"path",description:"Wallet Public key or address",required:!0,schema:{type:"string",example:"1f7fecf4cf4564c88a92af55046c5c4bf0a76b9b5536f7d30962192552f92237"}},{name:"weight",in:"path",description:"Vote weight for this key",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:1}}],responses:{200:{description:"todo",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"post",path:"/census/{censusId}/add/{publicKey}/{weight}",servers:[{url:"https://api.vocdoni.io/version/v3"}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Create new census",description:{content:"- Requires Bearer token \n- Adds a new wallet public key or wallet address to a census with a specific weight\n- If the weight parameter is missing, weight=1 is considered",type:"text/plain"},url:{path:["census",":censusId","add",":publicKey",":weight"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Census id",type:"text/plain"},type:"any",value:"",key:"censusId"},{disabled:!1,description:{content:"(Required) Wallet Public key or address",type:"text/plain"},type:"any",value:"",key:"publicKey"},{disabled:!1,description:{content:"(Required) Vote weight for this key",type:"text/plain"},type:"any",value:"",key:"weight"}]},header:[{key:"Accept",value:"application/json"}],method:"POST",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"post api-method",info_path:"vocdoni/vocdoni-api"},u=void 0,m={unversionedId:"vocdoni/census-add-key",id:"vocdoni/census-add-key",title:"Create new census",description:"- Requires Bearer token  - Adds a new wallet public key or wallet address to a census with a specific weight - If the weight parameter is missing, weight=1 is considered",source:"@site/docs/vocdoni/census-add-key.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/census-add-key",permalink:"/vocdoni-docs-demo/vocdoni/census-add-key",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/census-add-key.api.mdx",tags:[],version:"current",frontMatter:{id:"census-add-key",title:"Create new census",description:"- Requires Bearer token  - Adds a new wallet public key or wallet address to a census with a specific weight - If the weight parameter is missing, weight=1 is considered",sidebar_label:"Create new census",hide_title:!0,hide_table_of_contents:!0,api:{description:"- Requires Bearer token \n- Adds a new wallet public key or wallet address to a census with a specific weight\n- If the weight parameter is missing, weight=1 is considered",operationId:"censusAddKey",security:[{bearerAuth:[]}],tags:["census"],parameters:[{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}},{name:"publicKey",in:"path",description:"Wallet Public key or address",required:!0,schema:{type:"string",example:"1f7fecf4cf4564c88a92af55046c5c4bf0a76b9b5536f7d30962192552f92237"}},{name:"weight",in:"path",description:"Vote weight for this key",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:1}}],responses:{200:{description:"todo",content:{"application/json":{example:'{\n  "todo": "object"\n}'}}}},method:"post",path:"/census/{censusId}/add/{publicKey}/{weight}",servers:[{url:"https://api.vocdoni.io/version/v3"}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Create new census",description:{content:"- Requires Bearer token \n- Adds a new wallet public key or wallet address to a census with a specific weight\n- If the weight parameter is missing, weight=1 is considered",type:"text/plain"},url:{path:["census",":censusId","add",":publicKey",":weight"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Census id",type:"text/plain"},type:"any",value:"",key:"censusId"},{disabled:!1,description:{content:"(Required) Wallet Public key or address",type:"text/plain"},type:"any",value:"",key:"publicKey"},{disabled:!1,description:{content:"(Required) Vote weight for this key",type:"text/plain"},type:"any",value:"",key:"weight"}]},header:[{key:"Accept",value:"application/json"}],method:"POST",auth:{type:"bearer",bearer:[{type:"any",value:"<Bearer Token>",key:"token"}]}}},sidebar_class_name:"post api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"Create new census",permalink:"/vocdoni-docs-demo/vocdoni/census-post"},next:{title:"Returns the merkle root for the census",permalink:"/vocdoni-docs-demo/vocdoni/census-root"}},h={},y=[{value:"Create new census",id:"create-new-census",level:2}],b={toc:y};function w(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,s.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"create-new-census"},"Create new census"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Requires Bearer token "),(0,i.kt)("li",{parentName:"ul"},"Adds a new wallet public key or wallet address to a census with a specific weight"),(0,i.kt)("li",{parentName:"ul"},"If the weight parameter is missing, weight=1 is considered")),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(o.Z,{className:"paramsItem",param:{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}},mdxType:"ParamsItem"}),(0,i.kt)(o.Z,{className:"paramsItem",param:{name:"publicKey",in:"path",description:"Wallet Public key or address",required:!0,schema:{type:"string",example:"1f7fecf4cf4564c88a92af55046c5c4bf0a76b9b5536f7d30962192552f92237"}},mdxType:"ParamsItem"}),(0,i.kt)(o.Z,{className:"paramsItem",param:{name:"weight",in:"path",description:"Vote weight for this key",allowEmptyValue:!0,required:!0,schema:{type:"integer",example:1,default:1}},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"todo")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(c.Z,{mdxType:"SchemaTabs"},(0,i.kt)(l.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "todo": "object"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}w.isMDXComponent=!0}}]);