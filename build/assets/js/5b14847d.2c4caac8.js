"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[4212],{81535:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>y});var i=o(87462),s=(o(67294),o(3905)),a=o(26389),r=o(94891),n=o(74933),d=o(47507),p=(o(24310),o(63303)),c=(o(75035),o(85162));const l={id:"census-verify-proof",title:"Verify merkle proof",description:"Verify merkle proof",sidebar_label:"Verify merkle proof",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"censusVerifyProof",tags:["census"],parameters:[{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}}],responses:{200:{description:"todo",content:{"application/json":{example:'{\n  "valid": true\n}'}}}},description:"Verify merkle proof",method:"get",path:"/census/{censusId}/verify",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Verify merkle proof",description:{type:"text/plain"},url:{path:["census",":censusId","verify"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Census id",type:"text/plain"},type:"any",value:"",key:"censusId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},u=void 0,m={unversionedId:"vocdoni/census-verify-proof",id:"vocdoni/census-verify-proof",title:"Verify merkle proof",description:"Verify merkle proof",source:"@site/docs/vocdoni/census-verify-proof.api.mdx",sourceDirName:"vocdoni",slug:"/vocdoni/census-verify-proof",permalink:"/vocdoni-docs-demo/build/vocdoni/census-verify-proof",draft:!1,editUrl:"https://github.com/PaloAltoNetworks/docusaurus-openapi-docs/tree/main/demo/docs/vocdoni/census-verify-proof.api.mdx",tags:[],version:"current",frontMatter:{id:"census-verify-proof",title:"Verify merkle proof",description:"Verify merkle proof",sidebar_label:"Verify merkle proof",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"censusVerifyProof",tags:["census"],parameters:[{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}}],responses:{200:{description:"todo",content:{"application/json":{example:'{\n  "valid": true\n}'}}}},description:"Verify merkle proof",method:"get",path:"/census/{censusId}/verify",servers:[{url:"https://api.vocdoni.io/version/v3"}],security:[{bearerAuth:[]}],securitySchemes:{bearerAuth:{type:"http",scheme:"bearer"}},info:{version:"2.0.0",title:"Vocdoni API",license:{name:"MIT"},description:"**Goals and Objectives:** The Vocdoni API is meant to be the entry point for external integrators to add voting capabilities to an existing  CRM, customer base and product experience. The API should act as a satellite that facilitates creating votes using  Vocdoni, without the hassle of learning a deep platform."},postman:{name:"Verify merkle proof",description:{type:"text/plain"},url:{path:["census",":censusId","verify"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Census id",type:"text/plain"},type:"any",value:"",key:"censusId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"vocdoni/vocdoni-api"},sidebar:"petstore",previous:{title:"Prove the key and weight belong to the census root hash",permalink:"/vocdoni-docs-demo/build/vocdoni/census-verify-key"},next:{title:"Delete unpublished census",permalink:"/vocdoni-docs-demo/build/vocdoni/census-delete"}},f={},y=[{value:"Verify merkle proof",id:"verify-merkle-proof",level:2}],v={toc:y};function h(e){let{components:t,...o}=e;return(0,s.kt)("wrapper",(0,i.Z)({},v,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"verify-merkle-proof"},"Verify merkle proof"),(0,s.kt)("p",null,"Verify merkle proof"),(0,s.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("strong",null,"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(n.Z,{className:"paramsItem",param:{name:"censusId",in:"path",description:"Census id",required:!0,schema:{type:"string",example:"b547a9c83ad7d61b568cf10ebbb25338d680810fa219fa69477cfbd860b386c2"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)(a.Z,{mdxType:"ApiTabs"},(0,s.kt)(c.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"todo")),(0,s.kt)("div",null,(0,s.kt)(r.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(p.Z,{mdxType:"SchemaTabs"},(0,s.kt)(c.Z,{label:"Example",value:"Example",mdxType:"TabItem"},(0,s.kt)(d.Z,{responseExample:'{\n  "valid": true\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}h.isMDXComponent=!0}}]);